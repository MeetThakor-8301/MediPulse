@model MediPulseWeb.Models.DTOs.DoctorResponse
@{
    ViewData["Title"] = "My Profile";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>My Profile</h1>
        <div>
            <a href="@Url.Action("Status", "Doctor")" class="btn btn-outline-primary me-2">
                <i class="bi bi-person-check"></i> View Status
            </a>
            <a href="@Url.Action("Appointments", "Doctor")" class="btn btn-outline-primary">
                <i class="bi bi-calendar-check"></i> My Appointments
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="card shadow-sm mb-4">
                <div class="card-body text-center">
                    <div class="mb-3">
                        <i class="bi bi-person-circle display-1 text-primary"></i>
                    </div>
                    <h5 class="card-title">@Model.Name</h5>
                    <p class="text-muted">@Model.Specialty</p>
                    <a href="@Url.Action("Index", "Profile")" class="btn btn-primary">
                        <i class="bi bi-pencil"></i> Edit Profile
                    </a>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Contact Information</h5>
                    <ul class="list-unstyled">
                        <li class="mb-2">
                            <i class="bi bi-envelope text-primary me-2"></i>
                            @Model.Email
                        </li>                       
                    </ul>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <h5 class="card-title mb-3">Professional Information</h5>
                    <div class="row">
                        <div class="col-md-12">
                            <p><strong>Registration Date:</strong> @Model.RegistrationDate.ToString("MMM dd, yyyy")</p>
                            <p><strong>Approval Status:</strong>
                                @switch (Model.ApprovalStatus)
                                {
                                    case "Approved":
                                        <span class="badge bg-success">Approved</span>
                                        break;
                                    case "Rejected":
                                        <span class="badge bg-danger">Rejected</span>
                                        break;
                                    default:
                                        <span class="badge bg-warning">Pending</span>
                                        break;
                                }
                            </p>
                            @if (Model.ApprovalStatus == "Rejected" && !string.IsNullOrEmpty(Model.RejectionReason))
                            {
                                <p><strong>Rejection Reason:</strong> @Model.RejectionReason</p>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Certificates</h5>
                    @if (Model.CertificateUrl != null && Model.CertificateUrl.Any())
                    {
                       <a class="btn btn-primary" href="@Model.CertificateUrl">View Certificate</a>
                    }
                    else
                    {
                        <p class="text-muted">No certificates uploaded yet.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div> 